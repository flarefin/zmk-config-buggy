#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layers
#define alpha1 0
#define alpha2 1
#define bt_layer 2


//        20 2  21    1  0  3
//     14 15 18 19    4  5  6  7
//           16 10    9  8


/ {
    behaviors {
        alpha2macro: behavior_macro_1 {
		    compatible = "zmk,behavior-macro";
		    label = "MACRO1";
	    	#binding-cells = <0>;
	    	bindings = < &sl alpha2 >;
        };
    }

    keymap {
        compatible = "zmk,keymap";

        alpha1 {
            bindings = <
                            &kp L       &kp D       &kp Y               &kp M       &kp O       &kp U
                &kp N       &kp R       &kp T       &kp S               &kp H       &kp A       &kp I       &kp E

                                        &kp SPACE   &mo 2               &none       &a2macro
            >;
        };

        alpha2 {
            bindings = <
                            &kp X       &kp V       &kp G               &kp K       &kp Q       &kp COMMA
                &kp P       &kp W       &kp B       &kp C               &kp F       &kp Z       &kp DOT     &kp J

                                        &kp SPACE   &none               &none       &none
            >;
        };
/*
        symbol1 {
            bindings = <
                            &none       &none       &none               &none       &none       &none
                &none       &none       &none       &none               &none       &none       &none       &none

                                        &kp SPACE   &none               &none       &none
            >;
        };
*/
        bt_layer {
            bindings = <
                &bt BT_SEL 0
                &bt BT_SEL 1
                &bt BT_SEL 2
                &bt BT_CLR

                            &none       &none       &none               &none       &none       &none
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_CLR       &none       &none       &none       &none

                                        &kp SPACE   &none               &none       &none

            >;
        };
    };
};
